<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-08-26 at 11:19:36.
 */
if (! defined ( '__DOCUMENT_ROOT__' )) {
	require_once $_SERVER ["PWD"] . '/prepare.php';
}
class moniteurTest extends MockedListeOptions {
	/**
     * @var moniteur
     */
	protected $object;

	/**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
	protected function setUp() {
		ob_start ();
		$this->object = new moniteur ( false, "TESTS moniteur" );
		$this->object->setListeOptions ( $this->getListeOption () )
			->setUpdate ( "non" );
	}

	/**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
	protected function tearDown() {
		ob_end_clean ();
	}

	/**
     * @covers moniteur::retrouve_moniteur_param
     */
	public function testretrouve_moniteur_param() {
		$this->object->getListeOptions ()
			->expects ( $this->any () )
			->method ( 'renvoi_variables_standard' )
			->will ( $this->onconsecutiveCalls ( "CHECK", "CI", "SERVEUR", "8443", "non", true ) );
		$this->assertSame ( $this->object, $this->object->retrouve_moniteur_param () );
		$this->assertEquals ( "CHECK", $this->object->getMoniteur () );
		$this->assertEquals ( "CI", $this->object->getCI () );
		$this->assertEquals ( "SERVEUR", $this->object->getHost () );
		$this->assertEquals ( "8443", $this->object->getPort () );
		$this->assertEquals ( "non", $this->object->getUpdate () );
		$this->assertEquals ( true, $this->object->getActiveSSH () );
	}
	
	/**
	 * @covers moniteur::retrouve_moniteur_ssh_param
	 */
	public function testretrouve_moniteur_ssh_param() {
		$this->object->getListeOptions ()
		->expects ( $this->any () )
		->method ( 'renvoi_variables_standard' )
		->will ( $this->onconsecutiveCalls ( "SSHUSER", "", "", "", "", "","","" ) );
		
		$this->object->setHost("SERVEUR");
		$this->assertSame ( $this->object, $this->object->retrouve_moniteur_ssh_param () );
	}

	/**
     * @covers moniteur::ecrit
     */
	public function testecrit() {
		$this->assertSame ( $this->object, $this->object->ecrit ("TEXTE") );
		$this->assertEquals ( "TEXTE", $this->object->getDatas() );
	}
	
	/**
	 * @covers moniteur::envoi_mail
	 */
	public function testenvoi_mail() {
		$this->assertSame ( $this->object, $this->object->envoi_mail ("to@to.com","from@from.com") );
	}
}
