<?php
namespace Zorille\WMI;
use Zorille\framework as Core;
use \stdClass as stdClass;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2015-05-05 at 09:05:24.
 */
if (! defined ( '__DOCUMENT_ROOT__' )) {
	require_once $_SERVER ["PWD"] . '/prepare.php';
}
class WMITest extends Core\MockedListeOptions {
	/**
     * @var WMI
     */
	protected $object;

	/**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
	protected function setUp() {
		ob_start ();
		$this->object = new WMI ( false, "TESTS WMI" );
	}

	/**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
	protected function tearDown() {
		ob_end_clean ();
	}

	/**
     * @covers Zorille\WMI\WMI::prepare_wmi
     */
	public function testPrepare_wmi() {
		$this->assertSame ( $this->object, $this->object->prepare_wmi () );
	}

	/**
     * @covers Zorille\WMI\WMI::retrouve_type
     * @todo   Implement testRetrouve_type().
     */
	public function testRetrouve_type() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete ( 'This test has not been implemented yet.' );
	}

	/**
     * @covers Zorille\WMI\WMI::lire_properties
     * @todo   Implement testRetrouve_type().
     */
	public function testLire_properties() {
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete ( 'This test has not been implemented yet.' );
	}

	/**
     * @covers Zorille\WMI\WMI::lire_Methods
     */
	public function testLire_Methods() {
		$dataTest = new stdClass ();
		$dataTest->Name = "NOM1";
		$dataTest->InParameters = new stdClass ();
		$dataTest->OutParameters = new stdClass ();
		$tableau_result = array ();
		$this->assertSame ( $this->object, $this->object->lire_Methods ( $dataTest, $tableau_result ) );
		$this->assertEquals ( array (
				"NOM1" => array (
						'InParameters' => Array (
								'methodes' => Array (),
								'Properties' => Array () 
						),
						'OutParameters' => Array (
								'methodes' => Array (),
								'Properties' => Array () 
						) 
				) 
		), $tableau_result );
	}

	/**
     * @covers Zorille\WMI\WMI::lire_Qualifiers
     */
	public function testLire_Qualifiers() {
		$dataTest = new stdClass ();
		$dataTest->Name = "NOM";
		$tableau_result = array ();
		
		$this->assertSame ( $this->object, $this->object->lire_Qualifiers ( $dataTest, $tableau_result ) );
		$this->assertEquals ( array (
				"NOM" => array () 
		), $tableau_result );
	}
}
