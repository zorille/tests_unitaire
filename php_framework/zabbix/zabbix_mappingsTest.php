<?php
namespace Zorille\framework;
use \Exception as Exception;
if (! defined ( '__DOCUMENT_ROOT__' )) {
	require_once $_SERVER ["PWD"] . '/prepare.php';
}

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2015-03-20 at 10:10:11.
 */
class zabbix_mappingsTest extends MockedListeOptions {
	/**
     * @var zabbix_mappings
     */
	protected $object;

	/**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
	protected function setUp() {
		ob_start ();
		$zabbix_wsclient = $this ->createMock('Zorille\framework\zabbix_wsclient' );
		
		$this->object = new zabbix_mappings ( false, "zabbix_mappings" );
		$this->object ->setObjetZabbixWsclient ( $zabbix_wsclient );
	}

	/**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
	protected function tearDown() {
		ob_end_clean ();
	}

	/**
     * @covers Zorille\framework\zabbix_mappings::retrouve_zabbix_param
     */
	public function testRetrouve_zabbix_param_Exception() {
		$this ->getListeOption () 
			->expects ( $this ->any () ) 
			->method ( 'verifie_variable_standard' ) 
			->will ( $this ->returnValue ( false ) );
		$this->object ->setListeOptions ( $this ->getListeOption () );
		
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(zabbix_mappings) Il faut des donnees de mapping' );
		$this->object ->retrouve_zabbix_param ();
		
		$this ->assertEquals ( array (), $this->object ->getListeMapping () );
	}

	/**
	 * @covers Zorille\framework\zabbix_mappings::retrouve_zabbix_param
	 */
	public function testRetrouve_zabbix_param() {
		$this ->getListeOption () 
			->expects ( $this ->any () ) 
			->method ( 'verifie_variable_standard' ) 
			->will ( $this ->onConsecutiveCalls ( true, false ) );
		$this ->getListeOption () 
			->expects ( $this ->any () ) 
			->method ( 'renvoi_variables_standard' ) 
			->will ( $this ->returnValue ( "test1=>valeur1" ) );
		$this->object ->setListeOptions ( $this ->getListeOption () );
		
		$this ->assertSame ( $this->object, $this->object ->retrouve_zabbix_param () );
		$this ->assertEquals ( array ( 
				"test1" => array ( 
						"value" => "test1", 
						'newvalue' => 'valeur1' ) ), $this->object ->getListeMapping () );
	}

	/**
	 * @covers Zorille\framework\zabbix_mappings::retrouve_mappings
	 */
	public function testRetrouve_mappings_exception1() {
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(zabbix_mappings) Il faut un tableau de mapping' );
		$this->object ->retrouve_mappings ( "test" );
		$this ->assertEquals ( array (), $this->object ->getListeMapping () );
	}

	/**
	 * @covers Zorille\framework\zabbix_mappings::retrouve_mappings
	 */
	public function testRetrouve_mappings_exception2() {
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(zabbix_mappings) Il faut des donnees de mapping' );
		$this->object ->retrouve_mappings ( array () );
		$this ->assertEquals ( array (), $this->object ->getListeMapping () );
	}

	/**
	 * @covers Zorille\framework\zabbix_mappings::retrouve_mappings
	 */
	public function testRetrouve_mappings_valide() {
		$this ->assertSame ( $this->object, $this->object ->retrouve_mappings ( array ( 
				"test1=>value1" ) ) );
		$this ->assertEquals ( array ( 
				"test1" => array ( 
						"value" => "test1", 
						'newvalue' => 'value1' ) ), $this->object ->getListeMapping () );
	}

	/**
     * @covers Zorille\framework\zabbix_mappings::creer_definition_mappings_create_ws
     */
	public function testCreer_definition_mappings_create_ws() {
		$this ->assertEquals ( array (), $this->object ->creer_definition_mappings_create_ws () );
		$ListeMapping = array ( 
				array ( 
						"value" => "v1", 
						"newvalue" => "nv1" ) );
		$this->object ->setListeMapping ( $ListeMapping );
		$this ->assertEquals ( array ( 
				array ( 
						"value" => "v1", 
						"newvalue" => "nv1" ) ), $this->object ->creer_definition_mappings_create_ws () );
	}
}
