<?php
namespace Zorille\framework;
use \stdClass as stdClass;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2015-04-29 at 09:07:56.
 */
if (! defined ( '__DOCUMENT_ROOT__' )) {
	require_once $_SERVER ["PWD"] . '/prepare.php';
}
class vmwareDatacenterTest extends MockedListeOptions {
	/**
     * @var vmwareDatacenter
     */
	protected $object;

	/**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
	protected function setUp() {
		ob_start ();
		
		$objetVmwareWsclient = $this->createMock('Zorille\framework\vmwareWsclient' );
		$objetVmwareWsclient->expects ( $this->any () )
			->method ( 'applique_requete_soap' )
			->will ( $this->returnValue ( array (
				"RESULTAT SOAP" 
		) ) );
		
		$this->object = new vmwareDatacenter ( false, "TESTS vmwareDatacenter" );
		$this->object->setListeOptions ( $this->getListeOption () )
			->setObjectVmwareWsclient ( $objetVmwareWsclient );
		
		$ManagedEntity = new stdClass ();
		$ManagedEntity->_ = "MOID_ManagedEntity";
		$ManagedEntity->type = "ManagedEntity";
		$this->object->setManagedObject ( $ManagedEntity );
	}

	/**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
	protected function tearDown() {
		ob_end_clean ();
	}

	/**
     * @covers Zorille\framework\vmwareDatacenter::PowerOnMultiVM_Task
     */
	public function testPowerOnMultiVM_Task() {
		$this->assertEquals ( array (
				"RESULTAT SOAP" 
		), $this->object->PowerOnMultiVM_Task ( array (
				'MoID_VMs' 
		), "current behavior ", true ) );
	}

	/**
	 * @covers Zorille\framework\vmwareDatacenter::prepare_ClusterPowerOnVmOption
	 */
	public function testprepare_ClusterPowerOnVmOption() {
		$this->assertEquals ( array (
				array (
						'key' => 'OverrideAutomationLevel',
						'value' => 'NOT default value' 
				),
				array (
						'key' => 'ReserveResources',
						'value' => true 
				) 
		), $this->object->prepare_ClusterPowerOnVmOption ( "NOT default value", true ) );
	}
}
