<?php
namespace Zorille\framework;
use \Exception as Exception;
use \ArrayObject as ArrayObject; 
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2015-09-07 at 11:31:16.
 */
if (! defined ( '__DOCUMENT_ROOT__' )) {
	require_once $_SERVER ["PWD"] . '/prepare.php';
}
class DistributedVirtualSwitchPortConnectionTest extends MockedListeOptions {
	/**
     * @var DistributedVirtualSwitchPortConnection
     */
	protected $object;

	/**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
	protected function setUp() {
		ob_start ();
		$this->object = new DistributedVirtualSwitchPortConnection ( false, "TESTS DistributedVirtualSwitchPortConnection" );
	}

	/**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
	protected function tearDown() {
		ob_end_clean ();
	}

	/**
     * @covers Zorille\framework\DistributedVirtualSwitchPortConnection::renvoi_donnees_soap
     */
	public function testrenvoi_donnees_soap_Exception() {
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(TESTS DistributedVirtualSwitchPortConnection) Il faut un switchUuid' );
		$this ->assertEquals ( "Never reached", $this->object ->renvoi_donnees_soap () );
	}

	/**
	 * @covers Zorille\framework\DistributedVirtualSwitchPortConnection::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_Valide() {
		$this->object ->setSwitchUuid ( "switchUuid" ) 
			->setConnectionCookie ( 0 ) 
			->setPortgroupKey ( "GRPKEY" ) 
			->setPortKey ( "KEY" );
		$this ->assertEquals ( array ( 
				'portgroupKey' => 'GRPKEY', 
				'portKey' => 'KEY', 
				'switchUuid' => 'switchUuid' ), $this->object ->renvoi_donnees_soap () );
		
		$this->object ->setConnectionCookie ( 1 );
		$this ->assertEquals ( array ( 
				'connectionCookie' => 1, 
				'portgroupKey' => 'GRPKEY', 
				'portKey' => 'KEY', 
				'switchUuid' => 'switchUuid' ), $this->object ->renvoi_donnees_soap () );
	}

	/**
	 * @covers Zorille\framework\DistributedVirtualSwitchPortConnection::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_renvoi_objet() {
		$this->object ->setSwitchUuid ( "switchUuid" ) 
			->setConnectionCookie ( 0 ) 
			->setPortgroupKey ( "GRPKEY" ) 
			->setPortKey ( "KEY" );
		$this ->assertEquals ( new arrayObject ( array ( 
				'portgroupKey' => 'GRPKEY', 
				'portKey' => 'KEY', 
				'switchUuid' => 'switchUuid' ) ), $this->object ->renvoi_donnees_soap ( true ) );
	}
}
