<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2015-09-07 at 11:31:16.
 */
if (! defined ( '__DOCUMENT_ROOT__' )) {
	require_once $_SERVER ["PWD"] . '/prepare.php';
}
class VirtualMachineRelocateSpecDiskLocatorTest extends MockedListeOptions {
	/**
     * @var VirtualMachineRelocateSpecDiskLocator
     */
	protected $object;

	/**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
	protected function setUp() {
		ob_start ();
		$this->object = new VirtualMachineRelocateSpecDiskLocator ( false, "TESTS VirtualMachineRelocateSpecDiskLocator" );
	}

	/**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
	protected function tearDown() {
		ob_end_clean ();
	}

	/**
	 * @covers VirtualMachineRelocateSpecDiskLocator::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_Exception1() {
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(TESTS VirtualMachineRelocateSpecDiskLocator) Il faut un MOR datastore' );
		$this->object ->renvoi_donnees_soap ();
	}

	/**
	 * @covers VirtualMachineRelocateSpecDiskLocator::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_Exception2() {
		$this->object ->setDatastore ( array ( 
				"_" => "MOID_Datastore" ) );
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(TESTS VirtualMachineRelocateSpecDiskLocator) Il faut un diskId' );
		$this->object ->renvoi_donnees_soap ();
	}

	/**
	 * @covers VirtualMachineRelocateSpecDiskLocator::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_Valide() {
		$diskBackingInfo = $this ->createMock ( "VirtualCdromAtapiBackingInfo" );
		$diskBackingInfo ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"DiskBackingInfo" ) ) );
		
		$this->object ->setDatastore ( array ( 
				"_" => "MOID_Datastore" ) ) 
			->setDiskBackingInfo ( $diskBackingInfo ) 
			->setDiskId ( "ID1" ) 
			->setDiskMoveType ( "DiskMoveType" ) 
			->setProfile ( "Profile" );
		$this ->assertEquals ( array ( 
				'datastore' => 'MOID_Datastore', 
				'diskMoveType' => 'DiskMoveType', 
				'profile' => 'Profile', 
				'diskId' => 'ID1', 
				'diskBackingInfo' => Array ( 
						"DiskBackingInfo" ) ), $this->object ->renvoi_donnees_soap () );
	}

	/**
	 * @covers VirtualMachineRelocateSpecDiskLocator::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_renvoi_objet() {
		$this->object ->setDatastore ( array ( 
				"_" => "MOID_Datastore" ) ) 
			->setDiskId ( "ID1" );
		$object = new arrayObject ( array ( 
				'datastore' => 'MOID_Datastore', 
				'diskId' => 'ID1' ) );
		$this ->assertEquals ( $object, $this->object ->renvoi_donnees_soap ( true ) );
	}

	/**
	 * @covers VirtualMachineRelocateSpecDiskLocator::renvoi_objet_soap
	 */
	public function testrenvoi_objet_soap_renvoi_objet() {
		$this->object ->setDatastore ( array ( 
				"_" => "MOID_Datastore" ) ) 
			->setDiskId ( "ID1" );
		$object = new arrayObject ( array ( 
				'datastore' => 'MOID_Datastore', 
				'diskId' => 'ID1' ) );
		$resultat = new soapvar ( $object, SOAP_ENC_OBJECT, "VirtualMachineRelocateSpecDiskLocator" );
		$this ->assertEquals ( $resultat, $this->object ->renvoi_objet_soap ( true ) );
	}
}
