<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2015-09-07 at 11:31:16.
 */
if (! defined ( '__DOCUMENT_ROOT__' )) {
	require_once $_SERVER ["PWD"] . '/prepare.php';
}
class VirtualEthernetCardNetworkBackingInfoTest extends MockedListeOptions {
	/**
     * @var VirtualEthernetCardNetworkBackingInfo
     */
	protected $object;

	/**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
	protected function setUp() {
		ob_start ();
		$this->object = new VirtualEthernetCardNetworkBackingInfo ( false, "TESTS VirtualEthernetCardNetworkBackingInfo" );
	}

	/**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
	protected function tearDown() {
		ob_end_clean ();
	}

	/**
	 * @covers VirtualEthernetCardNetworkBackingInfo::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_Exception() {
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(TESTS VirtualEthernetCardNetworkBackingInfo) Il faut un ManagedObjectReference de type network' );
		$this->object ->renvoi_donnees_soap ();
	}

	/**
	 * @covers VirtualEthernetCardNetworkBackingInfo::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap() {
		$this->object ->setInPassthroughMode ( TRUE ) 
			->setNetwork ( array ( 
				"_" => "MOID_Network" ) );
		$this ->assertEquals ( array ( 
				'inPassthroughMode' => TRUE, 
				'network' => 'MOID_Network', 
				'deviceName' => '' ), $this->object ->renvoi_donnees_soap () );
	}

	/**
	 * @covers VirtualEthernetCardNetworkBackingInfo::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_renvoi_objet() {
		$this->object ->setNetwork ( array ( 
				"_" => "MOID_Network" ) );
		$object = new arrayObject ( array ( 
				'network' => 'MOID_Network', 
				'deviceName' => '' ) );
		$this ->assertEquals ( $object, $this->object ->renvoi_donnees_soap ( true ) );
	}

	/**
	 * @covers VirtualEthernetCardNetworkBackingInfo::renvoi_objet_soap
	 */
	public function testrenvoi_objet_soap_renvoi_objet() {
		$this->object ->setNetwork ( array ( 
				"_" => "MOID_Network" ) );
		$object = new arrayObject ( array ( 
				'network' => 'MOID_Network', 
				'deviceName' => '' ) );
		$resultat = new soapvar ( $object, SOAP_ENC_OBJECT, "VirtualEthernetCardNetworkBackingInfo" );
		$this ->assertEquals ( $resultat, $this->object ->renvoi_objet_soap ( true ) );
	}
}
