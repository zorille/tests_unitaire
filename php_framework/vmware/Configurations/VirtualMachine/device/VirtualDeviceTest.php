<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2015-09-07 at 11:31:16.
 */
if (! defined ( '__DOCUMENT_ROOT__' )) {
	require_once $_SERVER ["PWD"] . '/prepare.php';
}
class VirtualDeviceTest extends MockedListeOptions {
	/**
     * @var VirtualDevice
     */
	protected $object;

	/**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
	protected function setUp() {
		ob_start ();
		$this->object = $this->getMockForAbstractClass ( "VirtualDevice" );
	}

	/**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
	protected function tearDown() {
		ob_end_clean ();
	}

	/**
	 * @covers VirtualDevice::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_Valide() {
		$diskBackingInfo = $this->createMock ( "VirtualCdromAtapiBackingInfo" );
		$diskBackingInfo->expects ( $this->any () )
			->method ( 'renvoi_objet_soap' )
			->will ( $this->returnValue ( array (
				"DiskBackingInfo" 
		) ) );
		$connectable = $this->createMock ( "VirtualDeviceConnectInfo" );
		$connectable->expects ( $this->any () )
			->method ( 'renvoi_objet_soap' )
			->will ( $this->returnValue ( array (
				"VirtualDeviceConnectInfo" 
		) ) );
		$deviceInfo = $this->createMock ( "Vmware_Description" );
		$deviceInfo->expects ( $this->any () )
			->method ( 'renvoi_donnees_soap' )
			->will ( $this->returnValue ( array (
				"Vmware_Description" 
		) ) );
		$slotInfo = $this->createMock ( "VirtualDeviceBusSlotInfo" );
		$slotInfo->expects ( $this->any () )
			->method ( 'renvoi_donnees_soap' )
			->will ( $this->returnValue ( array (
				"VirtualDeviceBusSlotInfo" 
		) ) );
		$this->object->setBacking ( $diskBackingInfo )
			->setConnectable ( $connectable )
			->setDeviceInfo ( $deviceInfo )
			->setSlotInfo ( $slotInfo )
			->setControllerKey ( 10 )
			->setKey ( 15 )
			->setUnitNumber ( 18 );
		$this->assertEquals ( array (
				'key' => 15,
				'backing' => Array (
						"DiskBackingInfo" 
				),
				'connectable' => Array (
						"VirtualDeviceConnectInfo" 
				),
				'controllerKey' => 10,
				'deviceInfo' => array (
						"Vmware_Description" 
				),
				'slotInfo' => array (
						"VirtualDeviceBusSlotInfo" 
				),
				'unitNumber' => 18 
		), $this->object->renvoi_donnees_soap () );
	}

	/**
	 * @covers VirtualDevice::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_renvoi_objet() {
		$this->assertEquals ( new arrayObject (), $this->object->renvoi_donnees_soap ( true ) );
	}
}
