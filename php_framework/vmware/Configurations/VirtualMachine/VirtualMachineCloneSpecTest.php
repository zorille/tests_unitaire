<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2015-09-07 at 11:31:16.
 */
if (! defined ( '__DOCUMENT_ROOT__' )) {
	require_once $_SERVER ["PWD"] . '/prepare.php';
}
class VirtualMachineCloneSpecTest extends MockedListeOptions {
	/**
     * @var VirtualMachineCloneSpec
     */
	protected $object;

	/**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
	protected function setUp() {
		ob_start ();
		$this->object = new VirtualMachineCloneSpec ( false, "TESTS VirtualMachineCloneSpec" );
	}

	/**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
	protected function tearDown() {
		ob_end_clean ();
	}

	/**
     * @covers VirtualMachineCloneSpec::renvoi_donnees_soap
     */
	public function testrenvoi_donnees_soap_Exception() {
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(TESTS VirtualMachineCloneSpec) Il faut une location' );
		$this->object ->renvoi_donnees_soap ();
	}

	/**
	 * @covers VirtualMachineCloneSpec::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_Valide() {
		$config = $this ->createMock ( "VirtualMachineConfigSpec" );
		$config ->expects ( $this ->any () ) 
			->method ( 'renvoi_donnees_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"VirtualMachineConfigSpec" ) ) );
		$customization = $this ->createMock ( "CustomizationSpec" );
		$customization ->expects ( $this ->any () ) 
			->method ( 'renvoi_donnees_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationSpec" ) ) );
		$location = $this ->createMock ( "VirtualMachineRelocateSpec" );
		$location ->expects ( $this ->any () ) 
			->method ( 'renvoi_donnees_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"VirtualMachineRelocateSpec" ) ) );
		
		$this->object ->setConfig ( $config ) 
			->setCustomization ( $customization ) 
			->setLocation ( $location ) 
			->setMemory ( 2048 ) 
			->setSnapshot ( array ( 
				"_" => "MOID_snapshot" ) );
		$this ->assertEquals ( 
				array ( 
							'config' => array ( 
									"VirtualMachineConfigSpec" ), 
							'customization' => array ( 
									"CustomizationSpec" ), 
							'location' => array ( 
									"VirtualMachineRelocateSpec" ), 
							'powerOn' => false, 
							'snapshot' => 'MOID_snapshot', 
							'template' => false, 
							'memory' => 2048 ), 
					$this->object ->renvoi_donnees_soap () );
	}

	/**
	 * @covers VirtualMachineCloneSpec::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_renvoi_objet() {
		$location = $this ->createMock ( "VirtualMachineRelocateSpec" );
		$location ->expects ( $this ->any () ) 
			->method ( 'renvoi_donnees_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"VirtualMachineRelocateSpec" ) ) );
		
		$this->object ->setLocation ( $location );
		
		$object = new arrayObject ( array ( 
				'location' => array ( 
						"VirtualMachineRelocateSpec" ), 
				'powerOn' => false, 
				'template' => false ) );
		$this ->assertEquals ( $object, $this->object ->renvoi_donnees_soap ( true ) );
	}

	/**
	 * @covers VirtualMachineCloneSpec::renvoi_objet_soap
	 */
	public function testrenvoi_objet_soap_renvoi_objet() {
		$location = $this ->createMock ( "VirtualMachineRelocateSpec" );
		$location ->expects ( $this ->any () ) 
			->method ( 'renvoi_donnees_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"VirtualMachineRelocateSpec" ) ) );
		
		$this->object ->setLocation ( $location );
		
		$object = new arrayObject ( array ( 
				'location' => array ( 
						"VirtualMachineRelocateSpec" ), 
				'powerOn' => false, 
				'template' => false ) );
		$resultat = new soapvar ( $object, SOAP_ENC_OBJECT, "VirtualMachineCloneSpec" );
		$this ->assertEquals ( $resultat, $this->object ->renvoi_objet_soap ( true ) );
	}
}
