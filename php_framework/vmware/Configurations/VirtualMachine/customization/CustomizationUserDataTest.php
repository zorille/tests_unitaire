<?php
namespace Zorille\framework;
use \Exception as Exception;
use \ArrayObject as ArrayObject;
use \soapvar as soapvar;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2015-09-07 at 11:31:16.
 */
if (! defined ( '__DOCUMENT_ROOT__' )) {
	require_once $_SERVER ["PWD"] . '/prepare.php';
}
class CustomizationUserDataTest extends MockedListeOptions {
	/**
     * @var CustomizationUserData
     */
	protected $object;

	/**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
	protected function setUp() {
		ob_start ();
		$this->object = new CustomizationUserData ( false, "TESTS CustomizationUserData" );
	}

	/**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
	protected function tearDown() {
		ob_end_clean ();
	}

	/**
	 * @covers Zorille\framework\CustomizationUserData::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_Exception() {
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(TESTS CustomizationUserData) Il faut un fullName' );
		$this->object ->renvoi_donnees_soap ();
	}

	/**
	 * @covers Zorille\framework\CustomizationUserData::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_Exception2() {
		$this->object ->setFullName ( "FULNAME" );
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(TESTS CustomizationUserData) Il faut un orgName' );
		$this->object ->renvoi_donnees_soap ();
	}

	/**
	 * @covers Zorille\framework\CustomizationUserData::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_Exception3() {
		$this->object ->setFullName ( "FULNAME" ) 
			->setOrgName ( "ORGNAME" );
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(TESTS CustomizationUserData) Il faut un computerName' );
		$this->object ->renvoi_donnees_soap ();
	}

	/**
	 * @covers Zorille\framework\CustomizationUserData::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_Exception4() {
		$CustomizationName = $this ->createMock('Zorille\framework\CustomizationFixedName' );
		$CustomizationName ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationName" ) ) );
		$this->object ->setComputerName ( $CustomizationName ) 
			->setFullName ( "FULNAME" ) 
			->setOrgName ( "ORGNAME" );
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(TESTS CustomizationUserData) Il faut un productId' );
		$this->object ->renvoi_donnees_soap ();
	}

	/**
	 * @covers Zorille\framework\CustomizationUserData::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap() {
		$CustomizationName = $this ->createMock('Zorille\framework\CustomizationFixedName' );
		$CustomizationName ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationName" ) ) );
		$this->object ->setComputerName ( $CustomizationName ) 
			->setFullName ( "FULNAME" ) 
			->setOrgName ( "ORGNAME" ) 
			->setProductId ( 'M$ID' );
		$this ->assertEquals ( array ( 
				'computerName' => array ( 
						"CustomizationName" ), 
				'fullName' => "FULNAME", 
				'orgName' => "ORGNAME", 
				'productId' => 'M$ID' ), $this->object ->renvoi_donnees_soap () );
	}

	/**
	 * @covers Zorille\framework\CustomizationUserData::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_renvoi_objet() {
		$CustomizationName = $this ->createMock('Zorille\framework\CustomizationFixedName' );
		$CustomizationName ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationName" ) ) );
		$this->object ->setComputerName ( $CustomizationName ) 
			->setFullName ( "FULNAME" ) 
			->setOrgName ( "ORGNAME" ) 
			->setProductId ( 'M$ID' );
		$object = new arrayObject ( array ( 
				'computerName' => array ( 
						"CustomizationName" ), 
				'fullName' => "FULNAME", 
				'orgName' => "ORGNAME", 
				'productId' => 'M$ID' ) );
		$this ->assertEquals ( $object, $this->object ->renvoi_donnees_soap ( true ) );
	}

	/**
	 * @covers Zorille\framework\CustomizationUserData::renvoi_objet_soap
	 */
	public function testrenvoi_objet_soap_renvoi_objet() {
		$CustomizationName = $this ->createMock('Zorille\framework\CustomizationFixedName' );
		$CustomizationName ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationName" ) ) );
		$this->object ->setComputerName ( $CustomizationName ) 
			->setFullName ( "FULNAME" ) 
			->setOrgName ( "ORGNAME" ) 
			->setProductId ( 'M$ID' );
		$object = new arrayObject ( array ( 
				'computerName' => array ( 
						"CustomizationName" ), 
				'fullName' => "FULNAME", 
				'orgName' => "ORGNAME", 
				'productId' => 'M$ID' ) );
		$resultat = new soapvar ( $object, SOAP_ENC_OBJECT, "CustomizationUserData" );
		$this ->assertEquals ( $resultat, $this->object ->renvoi_objet_soap ( true ) );
	}
}
