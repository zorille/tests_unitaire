<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2015-09-07 at 11:31:16.
 */
if (! defined ( '__DOCUMENT_ROOT__' )) {
	require_once $_SERVER ["PWD"] . '/prepare.php';
}
class CustomizationIPSettingsTest extends MockedListeOptions {
	/**
     * @var CustomizationIPSettings
     */
	protected $object;

	/**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
	protected function setUp() {
		ob_start ();
		$this->object = new CustomizationIPSettings ( false, "TESTS CustomizationIPSettings" );
	}

	/**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
	protected function tearDown() {
		ob_end_clean ();
	}

	/**
	 * @covers CustomizationIPSettings::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_Exception() {
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(TESTS CustomizationIPSettings) Il faut une ip' );
		$this ->assertEquals ( "Never reached", $this->object ->renvoi_donnees_soap () );
	}

	/**
	 * @covers CustomizationIPSettings::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap() {
		$ip = $this ->createMock ( "CustomizationFixedIp" );
		$ip ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationIpGenerator" ) ) );
		$ipV6Spec = $this ->createMock ( "CustomizationIPSettingsIpV6AddressSpec" );
		$ipV6Spec ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationIPSettingsIpV6AddressSpec" ) ) );
		$this->object ->setDnsDomain ( ".A.B.C.com" ) 
			->setDnsServerList ( array ( 
				"SERVER1" ) ) 
			->setGateway ( array ( 
				"GATEWAY" ) ) 
			->setIp ( $ip ) 
			->setIpV6Spec ( $ipV6Spec ) 
			->setNetBIOS ( "disableNetBIOS" ) 
			->setPrimaryWINS ( "primaryWINS" ) 
			->setSecondaryWINS ( "secondaryWINS" ) 
			->setSubnetMask ( "255.255.255.0" );
		
		//Le webservice renvoie une erreur sur le champ timezone
		$this ->assertEquals ( 
				array ( 
							'dnsDomain' => '.A.B.C.com', 
							'dnsServerList' => Array ( 
									"SERVER1" ), 
							'gateway' => Array ( 
									"GATEWAY" ), 
							'ip' => Array ( 
									"CustomizationIpGenerator" ), 
							'ipV6Spec' => Array ( 
									"CustomizationIPSettingsIpV6AddressSpec" ), 
							'netBIOS' => 'disableNetBIOS', 
							'primaryWINS' => 'primaryWINS', 
							'secondaryWINS' => 'secondaryWINS', 
							'subnetMask' => '255.255.255.0' ), 
					$this->object ->renvoi_donnees_soap () );
	}

	/**
	 * @covers CustomizationIPSettings::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_renvoi_objet() {
		$ip = $this ->createMock ( "CustomizationFixedIp" );
		$ip ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationIpGenerator" ) ) );
		$this->object ->setIp ( $ip );
		$object = new arrayObject ( array ( 
				'ip' => Array ( 
						"CustomizationIpGenerator" ) ) );
		$this ->assertEquals ( $object, $this->object ->renvoi_donnees_soap ( true ) );
	}

	/**
	 * @covers CustomizationIPSettings::renvoi_objet_soap
	 */
	public function testrenvoi_objet_soap_renvoi_objet() {
		$ip = $this ->createMock ( "CustomizationFixedIp" );
		$ip ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationIpGenerator" ) ) );
		$this->object ->setIp ( $ip );
		$object = new arrayObject ( array ( 
				'ip' => Array ( 
						"CustomizationIpGenerator" ) ) );
		$resultat = new soapvar ( $object, SOAP_ENC_OBJECT, "CustomizationIPSettings" );
		$this ->assertEquals ( $resultat, $this->object ->renvoi_objet_soap ( true ) );
	}
}
