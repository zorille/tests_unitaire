<?php
namespace Zorille\framework;
use \Exception as Exception;
use \ArrayObject as ArrayObject;
use \soapvar as soapvar;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2015-09-07 at 11:31:16.
 */
if (! defined ( '__DOCUMENT_ROOT__' )) {
	require_once $_SERVER ["PWD"] . '/prepare.php';
}
class CustomizationSysprepTest extends MockedListeOptions {
	/**
     * @var CustomizationSysprep
     */
	protected $object;

	/**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
	protected function setUp() {
		ob_start ();
		$this->object = new CustomizationSysprep ( false, "TESTS CustomizationSysprep" );
	}

	/**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
	protected function tearDown() {
		ob_end_clean ();
	}

	/**
	 * @covers Zorille\framework\CustomizationSysprep::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_Exception() {
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(TESTS CustomizationSysprep) Il faut un guiUnattended' );
		$this->object ->renvoi_donnees_soap ();
	}

	/**
	 * @covers Zorille\framework\CustomizationSysprep::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_Exception2() {
		$guiUnattended = $this ->createMock('Zorille\framework\CustomizationGuiUnattended' );
		$guiUnattended ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationGuiUnattended" ) ) );
		$this->object ->setGuiUnattended ( $guiUnattended );
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(TESTS CustomizationSysprep) Il faut un userData' );
		$this->object ->renvoi_donnees_soap ();
	}

	/**
	 * @covers Zorille\framework\CustomizationSysprep::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_Exception3() {
		$guiUnattended = $this ->createMock('Zorille\framework\CustomizationGuiUnattended' );
		$guiUnattended ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationGuiUnattended" ) ) );
		$userData = $this ->createMock('Zorille\framework\CustomizationUserData' );
		$userData ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationUserData" ) ) );
		$this->object ->setGuiUnattended ( $guiUnattended ) 
			->setUserData ( $userData );
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(TESTS CustomizationSysprep) Il faut une identification' );
		$this->object ->renvoi_donnees_soap ();
	}

	/**
	 * @covers Zorille\framework\CustomizationSysprep::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap() {
		$guiRunOnce = $this ->createMock('Zorille\framework\CustomizationGuiRunOnce' );
		$guiRunOnce ->expects ( $this ->any () ) 
			->method ( 'renvoi_donnees_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationGuiRunOnce" ) ) );
		$guiUnattended = $this ->createMock('Zorille\framework\CustomizationGuiUnattended' );
		$guiUnattended ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationGuiUnattended" ) ) );
		$identification = $this ->createMock('Zorille\framework\CustomizationIdentification' );
		$identification ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationIdentification" ) ) );
		$licenseFilePrintData = $this ->createMock('Zorille\framework\CustomizationLicenseFilePrintData' );
		$licenseFilePrintData ->expects ( $this ->any () ) 
			->method ( 'renvoi_donnees_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationLicenseFilePrintData" ) ) );
		$userData = $this ->createMock('Zorille\framework\CustomizationUserData' );
		$userData ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationUserData" ) ) );
		$this->object ->setGuiRunOnce ( $guiRunOnce ) 
			->setGuiUnattended ( $guiUnattended ) 
			->setIdentification ( $identification ) 
			->setLicenseFilePrintData ( $licenseFilePrintData ) 
			->setUserData ( $userData );
		$this ->assertEquals ( 
				array ( 
							'guiUnattended' => Array ( 
									"CustomizationGuiUnattended" ), 
							'userData' => Array ( 
									"CustomizationUserData" ), 
							'guiRunOnce' => array ( 
									"CustomizationGuiRunOnce" ), 
							'identification' => Array ( 
									"CustomizationIdentification" ), 
							'licenseFilePrintData' => Array ( 
									"CustomizationLicenseFilePrintData" ) ), 
					$this->object ->renvoi_donnees_soap () );
	}

	/**
	 * @covers Zorille\framework\CustomizationSysprep::renvoi_donnees_soap
	 */
	public function testrenvoi_donnees_soap_renvoi_objet() {
		$guiRunOnce = $this ->createMock('Zorille\framework\CustomizationGuiRunOnce' );
		$guiRunOnce ->expects ( $this ->any () ) 
			->method ( 'renvoi_donnees_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationGuiRunOnce" ) ) );
		$guiUnattended = $this ->createMock('Zorille\framework\CustomizationGuiUnattended' );
		$guiUnattended ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationGuiUnattended" ) ) );
		$identification = $this ->createMock('Zorille\framework\CustomizationIdentification' );
		$identification ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationIdentification" ) ) );
		$licenseFilePrintData = $this ->createMock('Zorille\framework\CustomizationLicenseFilePrintData' );
		$licenseFilePrintData ->expects ( $this ->any () ) 
			->method ( 'renvoi_donnees_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationLicenseFilePrintData" ) ) );
		$userData = $this ->createMock('Zorille\framework\CustomizationUserData' );
		$userData ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationUserData" ) ) );
		$this->object ->setGuiRunOnce ( $guiRunOnce ) 
			->setGuiUnattended ( $guiUnattended ) 
			->setIdentification ( $identification ) 
			->setLicenseFilePrintData ( $licenseFilePrintData ) 
			->setUserData ( $userData );
		$object = new arrayObject ( 
				array ( 
						'guiUnattended' => Array ( 
								"CustomizationGuiUnattended" ), 
						'userData' => Array ( 
								"CustomizationUserData" ), 
						'guiRunOnce' => array ( 
								"CustomizationGuiRunOnce" ), 
						'identification' => Array ( 
								"CustomizationIdentification" ), 
						'licenseFilePrintData' => Array ( 
								"CustomizationLicenseFilePrintData" ) ) );
		$this ->assertEquals ( $object, $this->object ->renvoi_donnees_soap ( true ) );
	}

	/**
	 * @covers Zorille\framework\CustomizationSysprep::renvoi_objet_soap
	 */
	public function testrenvoi_objet_soap_renvoi_objet() {
		$guiRunOnce = $this ->createMock('Zorille\framework\CustomizationGuiRunOnce' );
		$guiRunOnce ->expects ( $this ->any () ) 
			->method ( 'renvoi_donnees_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationGuiRunOnce" ) ) );
		$guiUnattended = $this ->createMock('Zorille\framework\CustomizationGuiUnattended' );
		$guiUnattended ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationGuiUnattended" ) ) );
		$identification = $this ->createMock('Zorille\framework\CustomizationIdentification' );
		$identification ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationIdentification" ) ) );
		$licenseFilePrintData = $this ->createMock('Zorille\framework\CustomizationLicenseFilePrintData' );
		$licenseFilePrintData ->expects ( $this ->any () ) 
			->method ( 'renvoi_donnees_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationLicenseFilePrintData" ) ) );
		$userData = $this ->createMock('Zorille\framework\CustomizationUserData' );
		$userData ->expects ( $this ->any () ) 
			->method ( 'renvoi_objet_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"CustomizationUserData" ) ) );
		$this->object ->setGuiRunOnce ( $guiRunOnce ) 
			->setGuiUnattended ( $guiUnattended ) 
			->setIdentification ( $identification ) 
			->setLicenseFilePrintData ( $licenseFilePrintData ) 
			->setUserData ( $userData );
		$object = new arrayObject ( 
				array ( 
						'guiUnattended' => Array ( 
								"CustomizationGuiUnattended" ), 
						'userData' => Array ( 
								"CustomizationUserData" ), 
						'guiRunOnce' => array ( 
								"CustomizationGuiRunOnce" ), 
						'identification' => Array ( 
								"CustomizationIdentification" ), 
						'licenseFilePrintData' => Array ( 
								"CustomizationLicenseFilePrintData" ) ) );
		$resultat = new soapvar ( $object, SOAP_ENC_OBJECT, "CustomizationSysprep" );
		$this ->assertEquals ( $resultat, $this->object ->renvoi_objet_soap ( true ) );
	}
}
