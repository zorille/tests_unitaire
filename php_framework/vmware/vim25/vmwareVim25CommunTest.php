<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2015-04-29 at 09:09:03.
 */
if (! defined ( '__DOCUMENT_ROOT__' )) {
	require_once $_SERVER ["PWD"] . '/prepare.php';
}
class vmwareVim25CommunTest extends MockedListeOptions {
	/**
     * @var vmwareVim25Commun
     */
	protected $object;

	/**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
	protected function setUp() {
		ob_start ();
		
		$objetVmwareWsclient = $this ->createMock ( "vmwareWsclient" );
		$objetVmwareWsclient ->expects ( $this ->any () ) 
			->method ( 'applique_requete_soap' ) 
			->will ( $this ->returnValue ( array () ) );
		$objetVmwareWsclient ->expects ( $this ->any () ) 
			->method ( 'convertit_donnees' ) 
			->will ( $this ->returnValue ( array ( 
				"DATAS SOAP" ) ) );
		
		$this->object = new vmwareVim25Commun ( false, "TESTS vmwareVim25Commun" );
		$this->object ->setListeOptions ( $this ->getListeOption () ) 
			->setObjectVmwareWsclient ( $objetVmwareWsclient );
	}

	/**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
	protected function tearDown() {
		ob_end_clean ();
	}

	/**
	 * @covers vmwareVim25Commun::retrouve_objets
	 */
	public function testretrouve_objets_Exception1() {
		$objetVmwarePropertyCollector = $this ->createMock ( "vmwarePropertyCollector" );
		$objetVmwarePropertyCollector ->expects ( $this ->any () ) 
			->method ( 'RetrievePropertiesEx' ) 
			->will ( $this ->returnValue ( array () ) );
		$this->object ->setObjectVmwarePropertyCollector ( $objetVmwarePropertyCollector );
		
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(TESTS vmwareVim25Commun) Reponse RetrievePropertiesEx non utilisable' );
		$this->object ->retrouve_objets ( "test", array (), array (), true );
	}

	/**
	 * @covers vmwareVim25Commun::retrouve_objets
	 */
	public function testretrouve_objets_Exception2() {
		$objet_RetrievePropertiesEx = new stdClass ();
		$objet_RetrievePropertiesEx->objects = array ( 
				"DATAS" );
		$objet_RetrievePropertiesEx->token = 0;
		$objetVmwarePropertyCollector = $this ->createMock ( "vmwarePropertyCollector" );
		$objetVmwarePropertyCollector ->expects ( $this ->any () ) 
			->method ( 'RetrievePropertiesEx' ) 
			->will ( $this ->returnValue ( $objet_RetrievePropertiesEx ) );
		$objetVmwarePropertyCollector ->expects ( $this ->any () ) 
			->method ( 'ContinueRetrievePropertiesEx' ) 
			->will ( $this ->returnValue ( array () ) );
		$this->object ->setObjectVmwarePropertyCollector ( $objetVmwarePropertyCollector );
		
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(TESTS vmwareVim25Commun) Reponse ContinueRetrievePropertiesEx non utilisable' );
		$this->object ->retrouve_objets ( "test", array (), array (), true );
	}

	/**
	 * @covers vmwareVim25Commun::retrouve_objets
	 */
	public function testretrouve_objets() {
		$objet_RetrievePropertiesEx = new stdClass ();
		$objet_RetrievePropertiesEx->objects = array ( 
				"DATAS" );
		$objet_RetrievePropertiesEx->token = 0;
		$objet_ContinueRetrievePropertiesEx = new stdClass ();
		$objet_ContinueRetrievePropertiesEx->objects = array ( 
				"DATAS2" );
		$objetVmwarePropertyCollector = $this ->createMock ( "vmwarePropertyCollector" );
		$objetVmwarePropertyCollector ->expects ( $this ->any () ) 
			->method ( 'RetrievePropertiesEx' ) 
			->will ( $this ->returnValue ( $objet_RetrievePropertiesEx ) );
		$objetVmwarePropertyCollector ->expects ( $this ->any () ) 
			->method ( 'ContinueRetrievePropertiesEx' ) 
			->will ( $this ->returnValue ( $objet_ContinueRetrievePropertiesEx ) );
		$this->object ->setObjectVmwarePropertyCollector ( $objetVmwarePropertyCollector );
		
		$this ->assertEquals ( array ( 
				"DATAS", 
				"DATAS2" ), $this->object ->retrouve_objets ( "test", array (), array (), true ) );
	}
}
