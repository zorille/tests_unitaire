<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2015-04-29 at 09:07:56.
 */
if (! defined ( '__DOCUMENT_ROOT__' )) {
	require_once $_SERVER ["PWD"] . '/prepare.php';
}
class vmwareCustomFieldsManagerTest extends MockedListeOptions {
	/**
     * @var vmwareCustomFieldsManager
     */
	protected $object;

	/**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
	protected function setUp() {
		ob_start ();
		
		$objetVmwareWsclient = $this ->createMock ( "vmwareWsclient" );
		$objetVmwareWsclient ->expects ( $this ->any () ) 
			->method ( 'applique_requete_soap' ) 
			->will ( $this ->returnValue ( array ( 
				"RESULTAT SOAP" ) ) );
		
		$this->object = new vmwareCustomFieldsManager ( false, "TESTS vmwareCustomFieldsManager" );
		$this->object ->setListeOptions ( $this ->getListeOption () ) 
			->setObjectVmwareWsclient ( $objetVmwareWsclient );
		
		$soap_ServiceInstance_MOID = new stdClass ();
		$soap_ServiceInstance_MOID->_ = "MOID_customFieldsManager";
		$soap_ServiceInstance_MOID->type = "customFieldsManager";
		$this->object ->setCustomFieldsManager ( $soap_ServiceInstance_MOID );
	}

	/**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
	protected function tearDown() {
		ob_end_clean ();
	}

	/**
	 * @covers vmwareCustomFieldsManager::retrouve_customFieldsManager
	 */
	public function testretrouve_customFieldsManager_Exception() {
		$soap_message = new stdClass ();
		$soap_message->noFolders = "MOID_noFolders";
		$this ->expectException(Exception::class);
        $this->expectExceptionMessage( '(TESTS vmwareCustomFieldsManager) Pas de propriete customFieldsManager dans la liste des ServiceInstances' );
		$this->object ->retrouve_customFieldsManager ( $soap_message );
	}

	/**
	 * @covers vmwareCustomFieldsManager::retrouve_customFieldsManager
	 */
	public function testretrouve_customFieldsManager() {
		$soap_ServiceInstance = new stdClass ();
		$soap_ServiceInstance->customFieldsManager = "MOID_customFieldsManager";
		
		$this ->assertSame ( $this->object, $this->object ->retrouve_customFieldsManager ( $soap_ServiceInstance ) );
	}

	/**
	 * @covers vmwareCustomFieldsManager::creer_entete_customFieldsManager_this
	 */
	public function testcreer_entete_customFieldsManager_this() {
		$MOID_customFieldsManager = new stdClass ();
		$MOID_customFieldsManager->_this = $this->object ->getCustomFieldsManager ();
		
		$this ->assertEquals ( $MOID_customFieldsManager, $this->object ->creer_entete_customFieldsManager_this () );
	}

	/**
     * @covers vmwareCustomFieldsManager::AddCustomFieldDef
     */
	public function testAddCustomFieldDef() {
		$this ->assertEquals ( array ( 
				"RESULTAT SOAP" ), $this->object ->AddCustomFieldDef ( "TYPE1", "VirtualMachine" ) );
	}

	/**
	 * @covers vmwareCustomFieldsManager::RemoveCustomFieldDef
	 */
	public function testRemoveCustomFieldDef() {
		$this ->assertEquals ( array ( 
				"RESULTAT SOAP" ), $this->object ->RemoveCustomFieldDef ( 1 ) );
	}

	/**
	 * @covers vmwareCustomFieldsManager::RenameCustomFieldDef
	 */
	public function testRenameCustomFieldDef() {
		$this ->assertEquals ( array ( 
				"RESULTAT SOAP" ), $this->object ->RenameCustomFieldDef ( 1, "NEWNAME" ) );
	}

	/**
	 * @covers vmwareCustomFieldsManager::SetField
	 */
	public function testSetField() {
		$this ->assertEquals ( array ( 
				"RESULTAT SOAP" ), $this->object ->SetField ( "MoRef", 1, "VALUE" ) );
	}
}
