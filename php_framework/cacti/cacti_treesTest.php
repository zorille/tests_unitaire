<?php
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-08-25 at 16:52:27.
 */
if (! defined ( '__DOCUMENT_ROOT__' )) {
	require_once $_SERVER ["PWD"] . '/prepare.php';
}
require_once "cacti_API_fonctions.php";
class cacti_treesTest extends MockedListeOptions {
	/**
     * @var cacti_trees
     */
	protected $object;

	/**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
	protected function setUp() {
		ob_start ();
		$this->object = new cacti_trees ( false, "TESTS cacti_trees" );
	}

	/**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
	protected function tearDown() {
		ob_end_clean ();
	}

	/**
     * @covers cacti_trees::charge_trees
     */
	public function testCharge_trees() {
		$this->assertSame ( $this->object, $this->object->charge_trees () );
		$this->assertEquals ( array (
				'1' => 'd1',
				'2' => 'd2' 
		), $this->object->getTrees () );
	}

	/**
     * @covers cacti_trees::charge_trees_list
     */
	public function testCharge_trees_list() {
		$this->object->setTrees ( array (
				'1' => 'd1',
				'2' => 'd2' 
		) );
		
		$GLOBALS ['db_fetch_assoc']=array (
				array (
						"order_key" => 1,
						"local_graph_id" =>1,
						"title" => "titre",
						"host_id" => 10,
						"graph_title"=>"graph_title1"
				)
		);
		$this->assertSame ( $this->object, $this->object->charge_trees_list () );
		

		$GLOBALS ['db_fetch_assoc']=array (
				array (
						"order_key" => 1,
						"local_graph_id" =>0,
						"title" => "titre",
						"host_id" => 10,
						"graph_title"=>"graph_title1"
				)
		);
		$this->assertSame ( $this->object, $this->object->charge_trees_list () );
		
		$GLOBALS ['db_fetch_assoc']=array (
				array (
						"order_key" => 1,
						"local_graph_id" =>0,
						"title" => "",
						"host_id" => 10,
						"graph_title"=>"graph_title1",
						"hostname"=>"TEST"
				)
		);
		$this->assertSame ( $this->object, $this->object->charge_trees_list () );
		
	}

	/**
     * @covers cacti_trees::valide_tree_by_name
     */
	public function testValide_tree_by_name() {
		$this->object->setTrees ( array (
				'1' => array (
						'id' => 1,
						"graph_tree_id" => 10,
						'name' => 'd1'
				),
				'2' => array (
						'id' => 2,
						"graph_tree_id" => 20,
						'name' => 'd2'
				)
		) );
		$this->assertFalse ( $this->object->valide_tree_by_name ( "NOM" ) );
		$this->assertTrue ( $this->object->valide_tree_by_name ( "d1" ) );
	}

	/**
     * @covers cacti_trees::valide_tree_by_id
     */
	public function testValide_tree_by_id() {
		$this->object->setTrees ( array (
				'1' => array (),
				
				'2' => array () 
		) );
		$this->assertFalse ( $this->object->valide_tree_by_id ( 3 ) );
		$this->assertTrue ( $this->object->valide_tree_by_id ( 1 ) );
	}
}
